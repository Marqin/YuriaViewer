language: c

notifications:
  email: false


sudo: required
dist: trusty

os:
  - linux
  - osx

compiler:
  - clang
  - gcc

matrix:
  include:
    - os: linux
      compiler: clang
      env: ANALYZE=true
    - os: osx
      compiler: clang
      env: ANALYZE=true

before_script:
  - export SCAN_BUILD=""
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; brew install -v glfw glew; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$ANALYZE" = "true" ]; then sudo apt-get update -qq; sudo apt-get install -qq clang-3.5; export SCAN_BUILD=scan-build-3.5; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ] && [ "$ANALYZE" = "true" ]; then brew update; brew install -v llvm; export SCAN_BUILD=/usr/local/opt/llvm/share/clang/tools/scan-build/bin/scan-build; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse'; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse'; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; sudo apt-get install -qq pkg-config libxcursor-dev libxinerama-dev libxrandr-dev libxi-dev libglfw3 libglfw3-dev libglew-dev cmake; fi

script:
  - mkdir -p build && cd build
  - $SCAN_BUILD cmake -DCMAKE_C_COMPILER=$CC ..
  - $SCAN_BUILD cmake --build .
